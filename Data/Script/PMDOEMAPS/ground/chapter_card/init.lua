--[[
    init.lua
    Created: 11/28/2023 12:04:46
    Description: Autogenerated script file for the map chapter_card.
]]--
-- Commonly included lua functions and data
require 'origin.common'

-- Package name
local chapter_card = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---chapter_card.Init(map)
--Engine callback function
function chapter_card.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  

end

---chapter_card.Enter(map)
--Engine callback function
function chapter_card.Enter(map)

  GAME:CutsceneMode(true)
  GROUND:Hide("PLAYER")
  GAME:FadeIn(60)
  
  local coro1 = TASK:BranchCoroutine(function() UI:WaitShowTitle(STRINGS:Format(STRINGS.MapStrings['ChapterTitle_'..tostring(SV.Progression.Chapter)]), 60)
												  GAME:WaitFrames(300)
												  UI:WaitHideTitle(60) end)
  local coro2 = TASK:BranchCoroutine(function() UI:WaitShowBG("ChapterCard_"..tostring(SV.Progression.Chapter), 1, 60)
												  GAME:WaitFrames(300)
												  UI:WaitHideBG(60) end)
  TASK:JoinCoroutines({coro1, coro2})
  
  if SV.Progression.Chapter == 1 then
	GAME:EnterGroundMap("storm_cutscene_a", "Entrance")
  elseif SV.Progression.Chapter == 2 then
	--Go to ???
  elseif SV.Progression.Chapter == 3 then
	--Go to ???
  else
	--progression broke you aren't supposed to be here
	UI:WaitShowDialogue(STRINGS:Format("If you're currently reading this, the game's progression system has broken somehow. You should probably tell Minemaker about this. Going to title screen now."))
	GAME:RestartToTitle()
  end

end

---chapter_card.Exit(map)
--Engine callback function
function chapter_card.Exit(map)


end

---chapter_card.Update(map)
--Engine callback function
function chapter_card.Update(map)


end

---chapter_card.GameSave(map)
--Engine callback function
function chapter_card.GameSave(map)


end

---chapter_card.GameLoad(map)
--Engine callback function
function chapter_card.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------


return chapter_card

