--[[
    init.lua
    Created: 09/26/2023 13:56:09
    Description: Autogenerated script file for the map intro_cutscene.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local intro_cutscene = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---intro_cutscene.Init(map)
--Engine callback function
function intro_cutscene.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()

end

---intro_cutscene.Enter(map)
--Engine callback function
function intro_cutscene.Enter(map)

  GAME:FadeOut(false, 1)
  GROUND:Hide("PLAYER")
  UI:ResetSpeaker()
  
  --fade in wind
  GAME:WaitFrames(120)
  
  --lightning sfx
  SOUND:PlaySE("Battle/EVT_CH01_Thunder")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)
  SOUND:PlaySE("Battle/EVT_CH01_Thunder")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)
  
  GAME:WaitFrames(10)
  
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Unknown_1']))
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Unknown_2']))
  
  --lightning
  SOUND:PlaySE("Battle/EVT_CH01_Thunder")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)
  
  GAME:WaitFrames(10)
  
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Unknown_3']))
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Unknown_4']))
  
  --lightning
  SOUND:PlaySE("Battle/EVT_CH01_Thunder")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)
  
  GAME:WaitFrames(10)
  
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Unknown_5']))

  --lightning sfx
  SOUND:PlaySE("Battle/EVT_CH01_Thunder_2")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)
  SOUND:PlaySE("Battle/EVT_CH01_Thunder_2")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)

GAME:WaitFrames(10)

--lightning sfx
SOUND:PlaySE("Battle/EVT_CH01_Thunder_2")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)
  SOUND:PlaySE("Battle/EVT_CH01_Thunder_2")
  GAME:FadeOut(true, 1)
  GAME:WaitFrames(5)
  GAME:FadeOut(false, 1)
  GAME:WaitFrames(5)
  
  GAME:WaitFrames(10)
  
  --fade out
  --sfx
  SOUND:PlaySE("Battle/EVT_CH01_Transition")
  --intro_cutscene.ScreenTransition(1)
  local coro1 = TASK:BranchCoroutine(function() UI:WaitShowTimedDialogue(STRINGS:Format(MapStrings['Unknown_6']), 120) end)
  local coro2 = TASK:BranchCoroutine(function() GAME:FadeOut(true, 120) end)
  TASK:JoinCoroutines({coro1, coro2})
  
  --UI:WaitShowBG("Black", 1, 1)
  
  GAME:WaitFrames(180)
  
  GAME:FadeIn(60)
  
  GAME:WaitFrames(60)
  
  --show storm
  --UI:WaitHideBG(60)
  GAME:FadeIn(60)
  
  GAME:WaitFrames(360)
  
  GAME:FadeOut(false, 60)
  
  --show sharpedo bluff
  --GAME:WaitShowBG(1)
  GAME:FadeIn(60)
  
  --sharpedo bluff lightning
  
  GAME:FadeOut(false, 60)
  
  --make sure svs are set properly
  --SV.Progression.Chapter = 1
  --SV.Progression.SectionFlag = 0
  --SV.beach.Cutscene = true
  
  GAME:EnterZone('hub', -1, 1, 1)
  
end

---intro_cutscene.Exit(map)
--Engine callback function
function intro_cutscene.Exit(map)


end

---intro_cutscene.Update(map)
--Engine callback function
function intro_cutscene.Update(map)


end

---intro_cutscene.GameSave(map)
--Engine callback function
function intro_cutscene.GameSave(map)


end

---intro_cutscene.GameLoad(map)
--Engine callback function
function intro_cutscene.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function intro_cutscene.ScreenTransition()
	
end


return intro_cutscene

