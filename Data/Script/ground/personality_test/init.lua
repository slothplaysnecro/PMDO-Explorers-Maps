--[[
    init.lua
    Created: 07/03/2022 16:01:27
    Description: Autogenerated script file for the map personality_test.
]]--
-- Commonly included lua functions and data
require 'common'
--require 'PartnerEssentials'

-- Package name
local personality_test = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---personality_test.Init
--Engine callback function
function personality_test.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()

end

natureBold = 0
natureBrave = 0
natureCalm = 0
natureDocile = 0
natureHardy = 0
natureHasty = 0
natureImpish = 0
natureJolly = 0
natureLonely = 0
natureNaive = 0
natureQuiet = 0
natureQuirky = 0
natureRash = 0
natureRelaxed = 0
natureSassy = 0
natureTimid = 0

local starterListMale = {
-- Gen 1
	RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Male),
	
	RogueEssence.Dungeon.MonsterID("cubone", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("growlithe", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("machop", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("meowth", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("psyduck", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("vulpix", 0, "normal", Gender.Male),
--Gen 2
	RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Male),
	
	RogueEssence.Dungeon.MonsterID("phanpy", 0, "normal", Gender.Male),
--Gen 3
	RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Male),
	
	RogueEssence.Dungeon.MonsterID("skitty", 0, "normal", Gender.Male),
--Gen 4
	RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Male),
	
	RogueEssence.Dungeon.MonsterID("munchlax", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("riolu", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("shinx", 0, "normal", Gender.Male),
--Gen 5
	RogueEssence.Dungeon.MonsterID("snivy", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("oshawott", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("tepig", 0, "normal", Gender.Male),
	
	RogueEssence.Dungeon.MonsterID("axew", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("zorua", 0, "normal", Gender.Male),
	--RogueEssence.Dungeon.MonsterID("zorua", 1, "normal", Gender.Male),
--Gen 6	
	RogueEssence.Dungeon.MonsterID("rowlet", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("popplio", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("litten", 0, "normal", Gender.Male),
--Gen 7	
	RogueEssence.Dungeon.MonsterID("chespin", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("froakie", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("fennekin", 0, "normal", Gender.Male),
	
	RogueEssence.Dungeon.MonsterID("vulpix", 1, "normal", Gender.Male),
--Gen 8	
	RogueEssence.Dungeon.MonsterID("grookey", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("sobble", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("scorbunny", 0, "normal", Gender.Male),
--Gen 9	
	RogueEssence.Dungeon.MonsterID("sprigatito", 0, "normal", Gender.Male),
	RogueEssence.Dungeon.MonsterID("quaxly", 0, "normal", Gender.Male),		 
	RogueEssence.Dungeon.MonsterID("fuecoco", 0, "normal", Gender.Male)	 
}

local starterListFemale = {
-- Gen 1
	RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Female),
	
	RogueEssence.Dungeon.MonsterID("cubone", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("growlithe", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("machop", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("meowth", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("psyduck", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("vulpix", 0, "normal", Gender.Female),
--Gen 2
	RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Female),
	
	RogueEssence.Dungeon.MonsterID("phanpy", 0, "normal", Gender.Female),
--Gen 3
	RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Female),
	
	RogueEssence.Dungeon.MonsterID("skitty", 0, "normal", Gender.Female),
--Gen 4
	RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Female),
	
	RogueEssence.Dungeon.MonsterID("munchlax", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("riolu", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("shinx", 0, "normal", Gender.Female),
--Gen 5
	RogueEssence.Dungeon.MonsterID("snivy", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("oshawott", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("tepig", 0, "normal", Gender.Female),
	
	RogueEssence.Dungeon.MonsterID("axew", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("zorua", 0, "normal", Gender.Female),
	--RogueEssence.Dungeon.MonsterID("zorua", 1, "normal", Gender.Female),
--Gen 6	
	RogueEssence.Dungeon.MonsterID("rowlet", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("popplio", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("litten", 0, "normal", Gender.Female),
--Gen 7	
	RogueEssence.Dungeon.MonsterID("chespin", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("froakie", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("fennekin", 0, "normal", Gender.Female),
	
	RogueEssence.Dungeon.MonsterID("vulpix", 1, "normal", Gender.Female),
--Gen 8	
	RogueEssence.Dungeon.MonsterID("grookey", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("sobble", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("scorbunny", 0, "normal", Gender.Female),
--Gen 9	
	RogueEssence.Dungeon.MonsterID("sprigatito", 0, "normal", Gender.Female),
	RogueEssence.Dungeon.MonsterID("quaxly", 0, "normal", Gender.Female),		 
	RogueEssence.Dungeon.MonsterID("fuecoco", 0, "normal", Gender.Female)	 
}

local starterList = {
-- Gen 1
	RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Genderless),
	
	RogueEssence.Dungeon.MonsterID("cubone", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("growlithe", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("machop", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("meowth", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("psyduck", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("vulpix", 0, "normal", Gender.Genderless),
--Gen 2
	RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Genderless),
	
	RogueEssence.Dungeon.MonsterID("phanpy", 0, "normal", Gender.Genderless),
--Gen 3
	RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Genderless),
	
	RogueEssence.Dungeon.MonsterID("skitty", 0, "normal", Gender.Genderless),
--Gen 4
	RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Genderless),
	
	RogueEssence.Dungeon.MonsterID("munchlax", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("riolu", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("shinx", 0, "normal", Gender.Genderless),
--Gen 5
	RogueEssence.Dungeon.MonsterID("snivy", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("oshawott", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("tepig", 0, "normal", Gender.Genderless),
	
	RogueEssence.Dungeon.MonsterID("axew", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("zorua", 0, "normal", Gender.Genderless),
	--RogueEssence.Dungeon.MonsterID("zorua", 1, "normal", Gender.Genderless),
--Gen 6	
	RogueEssence.Dungeon.MonsterID("rowlet", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("popplio", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("litten", 0, "normal", Gender.Genderless),
--Gen 7	
	RogueEssence.Dungeon.MonsterID("chespin", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("froakie", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("fennekin", 0, "normal", Gender.Genderless),
	
	RogueEssence.Dungeon.MonsterID("vulpix", 1, "normal", Gender.Genderless),
--Gen 8	
	RogueEssence.Dungeon.MonsterID("grookey", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("sobble", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("scorbunny", 0, "normal", Gender.Genderless),
--Gen 9	
	RogueEssence.Dungeon.MonsterID("sprigatito", 0, "normal", Gender.Genderless),
	RogueEssence.Dungeon.MonsterID("quaxly", 0, "normal", Gender.Genderless),		 
	RogueEssence.Dungeon.MonsterID("fuecoco", 0, "normal", Gender.Genderless)	 
}

local egg_move_list = {
		--vanilla egg moves
		["vulpix"] = "feint_attack", 
		["meowth"] = "hypnosis",
		["eevee"] = "flail",
		["phanpy"] = "ancient_power",
		["skitty"] = "zen_headbutt",
		["shinx"] = "quick_attack",
		["munchlax"] = "zen_headbutt",
		["riolu"] = "bite",
		--origins egg moves
		["machop"] = "close_combat",
		["cubone"] = "ancient_power",
		["psyduck"] = "cross_chop",
		["axew"] = "aqua_tail",
		["zorua"] = "extrasensory"
		}

local function addNature(question, answer)

	--Minor Points
	
	--Bold
	if (((question == 5) and (answer == 1)) or ((question == 7) and (answer == 2)) or ((question == 10) and (answer == 1)) or ((question == 11) and (answer == 3)) or ((question == 12) and (answer == 3)) or ((question == 28) and (answer == 2)) or ((question == 36) and (answer == 1)) or ((question == 59) and (answer == 1)) or (question == 68 and answer == 3)) then
		natureBold = natureBold + 2
	end
	
	--Brave
	if ((question == 1 and answer == 1) or (question == 4 and answer == 1) or (question == 26 and answer == 1) or (question == 69 and answer == 2) or (question == 71 and answer == 1)) then
		natureBrave = natureBrave + 2
	end
	
	--Calm
	if ((question == 14 and answer == 1) or (question == 17 and answer == 2) or (question == 27 and answer == 1) or (question == 30 and answer == 2) or (question == 33 and answer == 2) or (question == 51 and answer == 2) or (question == 69 and answer == 3) or (question == 70 and answer == 1) or (question == 73 and answer == 3)) then
		natureCalm = natureCalm + 2
	end
	
	--Docile
	if ((question == 4 and answer == 2) or (question == 9 and answer == 3) or (question == 15 and answer == 2) or (question == 16 and answer == 2) or (question == 29 and answer == 2) or (question == 65 and answer == 2)) then
		natureDocile = natureDocile + 2
	end
	
	--Hardy
	if ((question == 35 and answer == 2) or (question == 41 and answer == 2) or (question == 60 and answer == 2) or (question == 64 and answer == 2) or (question == 67 and answer == 2)) then
		natureHardy = natureHardy + 2
	end
	
	--Hasty
	if ((question == 3 and answer == 2) or (question == 18 and answer == 1) or (question == 40 and answer == 2) or (question == 49 and answer == 1) or (question == 50 and answer == 2) or (question == 61 and answer == 2) or (question == 71 and answer == 3) or (question == 73 and answer == 1)) then
		natureHasty = natureHasty + 2
	end
	
	--Impish
	if ((question == 15 and answer == 2) or (question == 24 and answer == 1)) then
		natureImpish = natureImpish + 2
	end
	
	--Jolly
	if ((question == 35 and answer == 1) or (question == 44 and answer == 1) or (question == 54 and answer == 1) or (question == 65 and answer == 1)) then
		natureJolly = natureJolly + 2
	end
	
	--Lonely
	if ((question == 5 and answer == 2) or (question == 13 and answer == 1) or (question == 14 and answer == 3) or (question == 21 and answer == 1) or (question == 26 and answer == 2) or (question == 34 and answer == 1) or (question == 67 and answer == 4)) then
		natureLonely = natureLonely + 2
	end
	
	--Naive
	if ((question == 11 and answer == 2) or (question == 19 and answer == 1) or (question == 35 and answer == 1) or (question == 67 and answer == 3) or (question == 70 and answer == 3)) then
		natureNaive = natureNaive + 2
	end
	
	--Quiet
	if ((question == 3 and answer == 3) or (question == 9 and answer == 2) or (question == 10 and answer == 3) or (question == 11 and answer == 1) or (question == 13 and answer == 2) or (question == 23 and answer == 2) or (question == 26 and answer == 1) or (question == 29 and answer == 2) or (question == 31 and answer == 2) or (question == 44 and answer == 2) or (question == 45 and answer == 2) or (question == 49 and answer == 2) or (question == 59 and answer == 2) or (question == 66 and answer == 2)) then
		natureQuiet = natureQuiet + 2
	end
	
	--Quirky
	if ((question == 10 and answer == 3) or (question == 27 and answer == 2) or (question == 34 and answer == 2) or (question == 65 and answer == 3) or (question == 72 and answer == 1) or (question == 73 and answer == 2)) then
		natureQuirky = natureQuirky + 2
	end
	
	--Rash
	if ((question == 1 and answer == 3) or (question == 6 and answer == 2) or (question == 20 and answer == 1) or (question == 21 and answer == 2) or (question == 26 and answer == 3) or (question == 41 and answer == 1) or (question == 49 and answer == 1) or (question == 52 and answer == 2) or (question == 65 and answer == 4)) then
		natureRash = natureRash + 2
	end
	
	--Relaxed
	if ((question == 7 and answer == 2) or (question == 40 and answer == 1) or (question == 41 and answer == 3) or (question == 47 and answer == 2) or (question == 63 and answer == 1) or (question == 72 and answer == 3) or (question == 73 and answer == 2)) then
		natureRelaxed = natureRelaxed + 2
	end
	
	--Sassy
	if ((question == 2 and answer == 1) or (question == 4 and answer == 3) or (question == 18 and answer == 1) or (question == 37 and answer == 1) or (question == 58 and answer == 2) or (question == 66 and answer == 1) or (question == 69 and answer == 1)) then
		natureSassy = natureSassy + 2
	end
	
	--Timid
	if ((question == 7 and answer == 1) or (question == 8 and answer == 1) or (question == 10 and answer == 2) or (question == 11 and answer == 4) or (question == 16 and answer == 2) or (question == 19 and answer == 2) or (question == 20 and answer == 2) or (question == 26 and answer == 3) or (question == 36 and answer == 2) or (question == 45 and answer == 3) or (question == 46 and answer == 3) or (question == 54 and answer == 2) or (question == 56 and answer == 3) or (question == 58 and answer == 1) or (question == 61 and answer == 3) or (question == 63 and answer == 2)) then
		natureTimid = natureTimid + 2
	end
	
	--Major Points
	
	--Bold
	if ((question == 1 and answer == 3) or (question == 4 and answer == 3) or (question == 8 and answer == 1) or (question == 16 and answer == 1) or (question == 31 and answer == 3) or (question == 39 and answer == 3) or (question == 40 and answer == 1) or (question == 41 and answer == 3) or (question == 43 and answer == 3) or (question == 53 and answer == 1) or (question == 61 and answer == 1) or (question == 62 and answer == 1) or (question == 63 and answer == 3) or (question == 64 and answer == 3) or (question == 66 and answer == 1) or (question == 71 and answer == 1)) then
		natureBold = natureBold + 4
	end
	
	--Brave
	if ((question == 9 and answer == 1) or (question == 10 and answer == 1) or (question == 11 and answer == 3) or (question == 12 and answer == 2) or (question == 15 and answer == 3) or (question == 20 and answer == 1) or (question == 21 and answer == 1) or (question == 36 and answer == 1) or (question == 53 and answer == 2) or (question == 55 and answer == 2) or (question == 61 and answer == 1) or (question == 63 and answer == 1) or (question == 67 and answer == 2) or (question == 73 and answer == 1)) then
		natureBrave = natureBrave + 4
	end
	
	--Calm
	if ((question == 24 and answer == 2) or (question == 26 and answer == 2) or (question == 34 and answer == 2) or (question == 37 and answer == 2) or (question == 38 and answer == 1) or (question == 39 and answer == 3) or (question == 65 and answer == 3)) then
		natureCalm = natureCalm + 4
	end
	
	--Docile
	if ((question == 5 and answer == 1) or (question == 6 and answer == 1) or (question == 7 and answer == 1) or (question == 8 and answer == 2) or (question == 25 and answer == 2) or (question == 39 and answer == 2) or (question == 43 and answer == 1) or (question == 48 and answer == 1) or (question == 53 and answer == 3) or (question == 57 and answer == 1) or (question == 68 and answer == 1)) then
		natureDocile = natureDocile + 4
	end
	
	--Hardy
	if ((question == 1 and answer == 1) or (question == 2 and answer == 2) or (question == 3 and answer == 1) or (question == 4 and answer == 1) or (question == 32 and answer == 2) or (question == 39 and answer == 1) or (question == 42 and answer == 1) or (question == 50 and answer == 1) or (question == 52 and answer == 1) or (question == 66 and answer == 2)) then
		natureHardy = natureHardy + 4
	end
	
	--Hasty
	if ((question == 20 and answer == 1) or (question == 22 and answer == 1) or (question == 29 and answer == 1) or (question == 30 and answer == 1) or (question == 31 and answer == 1) or (question == 32 and answer == 1) or (question == 41 and answer == 1) or (question == 45 and answer == 1) or (question == 56 and answer == 1) or (question == 66 and answer == 3)) then
		natureHasty = natureHasty + 4
	end
	
	--Impish
	if ((question == 2 and answer == 1) or (question == 6 and answer == 3) or (question == 8 and answer == 3) or (question == 9 and answer == 1) or (question == 11 and answer == 3) or (question == 17 and answer == 1) or (question == 18 and answer == 2) or (question == 19 and answer == 1) or (question == 20 and answer == 1) or (question == 21 and answer == 2) or (question == 22 and answer == 3) or (question == 64 and answer == 1) or (question == 65 and answer == 4) or (question == 68 and answer == 3)) then
		natureImpish = natureImpish + 4
	end
	
	--Jolly
	if ((question == 7 and answer == 2) or (question == 11 and answer == 1) or (question == 13 and answer == 1) or (question == 14 and answer == 2) or (question == 15 and answer == 1) or (question == 16 and answer == 1) or (question == 22 and answer == 3) or (question == 38 and answer == 2) or (question == 41 and answer == 3) or (question == 43 and answer == 2) or (question == 57 and answer == 3) or (question == 62 and answer == 2) or (question == 67 and answer == 3) or (question == 72 and answer == 2)) then
		natureJolly = natureJolly + 4
	end
	
	--Lonely
	if ((question == 3 and answer == 4) or (question == 10 and answer == 2) or (question == 11 and answer == 2) or (question == 18 and answer == 3) or (question == 22 and answer == 2) or (question == 25 and answer == 3) or (question == 37 and answer == 1) or (question == 38 and answer == 3) or (question == 40 and answer == 2) or (question == 43 and answer == 1) or (question == 45 and answer == 1) or (question == 46 and answer == 2) or (question == 47 and answer == 1) or (question == 48 and answer == 4) or (question == 60 and answer == 1) or (question == 70 and answer == 2)) then
		natureLonely = natureLonely + 4
	end
	
	--Naive
	if ((question == 6 and answer == 2) or (question == 12 and answer == 3) or (question == 14 and answer == 2) or (question == 15 and answer == 1) or (question == 21 and answer == 2) or (question == 22 and answer == 3) or (question == 23 and answer == 1) or (question == 24 and answer == 1) or (question == 28 and answer == 2) or (question == 42 and answer == 3) or (question == 46 and answer == 1) or (question == 48 and answer == 2) or (question == 54 and answer == 1) or (question == 58 and answer == 2) or (question == 64 and answer == 1)) then
		natureNaive = natureNaive + 4
	end
	
	--Quiet
	if ((question == 53 and answer == 1) or (question == 54 and answer == 3) or (question == 55 and answer == 1) or (question == 56 and answer == 2) or (question == 72 and answer == 3)) then
		natureQuiet = natureQuiet + 4
	end
	
	--Quirky
	if ((question == 1 and answer == 2) or (question == 2 and answer == 3) or (question == 3 and answer == 2) or (question == 19 and answer == 2) or (question == 37 and answer == 3) or (question == 49 and answer == 1) or (question == 50 and answer == 2) or (question == 51 and answer == 1) or (question == 52 and answer == 2) or (question == 62 and answer == 3) or (question == 69 and answer == 1) or (question == 70 and answer == 3)) then
		natureQuirky = natureQuirky + 4
	end
	
	--Rash
	if ((question == 8 and answer == 2) or (question == 17 and answer == 1) or (question == 29 and answer == 1) or (question == 32 and answer == 3) or (question == 48 and answer == 3) or (question == 51 and answer == 1) or (question == 57 and answer == 2) or (question == 58 and answer == 3) or (question == 59 and answer == 1) or (question == 60 and answer == 1) or (question == 68 and answer == 2) or (question == 72 and answer == 1)) then
		natureRash = natureRash + 4
	end
	
	--Relaxed
	if ((question == 25 and answer == 4) or (question == 28 and answer == 1) or (question == 38 and answer == 2) or (question == 42 and answer == 2) or (question == 43 and answer == 2) or (question == 44 and answer == 1) or (question == 52 and answer == 3) or (question == 65 and answer == 1)) then
		natureRelaxed = natureRelaxed + 4
	end
	
	--Sassy
	if ((question == 12 and answer == 2) or (question == 14 and answer == 3) or (question == 25 and answer == 3) or (question == 33 and answer == 1) or (question == 34 and answer == 1) or (question == 35 and answer == 1) or (question == 36 and answer == 1) or (question == 47 and answer == 1) or (question == 55 and answer == 1)) then
		natureSassy = natureSassy + 4
	end
	
	--Timid
	if ((question == 5 and answer == 2) or (question == 9 and answer == 3) or (question == 12 and answer == 1) or (question == 25 and answer == 1) or (question == 27 and answer == 3) or (question == 28 and answer == 3) or (question == 67 and answer == 1) or (question == 70 and answer == 4) or (question == 71 and answer == 2) or (question == 73 and answer == 4)) then
		natureTimid = natureTimid + 4
	end
end

local function pokemonSelection(trait, natures, gender)

	--Male
	
	local maleResults = {
		RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Male),
		RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Male),
		RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("phanpy", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("shinx", 0, "normal", Gender.Male),
		 RogueEssence.Dungeon.MonsterID("riolu", 0, "normal", Gender.Male)
	}
	
	if gender == 1 then
		if trait == 1 then return maleResults[12] end
		if trait == 2 then return maleResults[4] end
		if trait == 3 then return maleResults[5] end
		if trait == 4 then return maleResults[2] end
		if trait == 5 then return maleResults[10] end
		if trait == 6 then return maleResults[15] end
		if trait == 7 then return maleResults[14] end
		if trait == 8 then return maleResults[7] end
		if trait == 9 then return maleResults[1] end
		if trait == 10 then return maleResults[13] end
		if trait == 11 then return maleResults[9] end
		if trait == 12 then return maleResults[3] end
		if trait == 13 then return maleResults[11] end
		if trait == 14 then return maleResults[8] end
		if trait == 15 then return maleResults[16] end
		if trait == 16 then return maleResults[6] end
	end
	
	--Female
	
	local femaleResults = {
		 RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("vulpix", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("skitty", 0, "normal", Gender.Female),
		 RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Female)
	}
	
	if gender == 2 then
		if trait == 1 then return femaleResults[3] end
		if trait == 2 then return femaleResults[2] end
		if trait == 3 then return femaleResults[6] end
		if trait == 4 then return femaleResults[1] end
		if trait == 5 then return femaleResults[13] end
		if trait == 6 then return femaleResults[10] end
		if trait == 7 then return femaleResults[4] end
		if trait == 8 then return femaleResults[16] end
		if trait == 9 then return femaleResults[11] end
		if trait == 10 then return femaleResults[15] end
		if trait == 11 then return femaleResults[5] end
		if trait == 12 then return femaleResults[14] end
		if trait == 13 then return femaleResults[9] end
		if trait == 14 then return femaleResults[8] end
		if trait == 15 then return femaleResults[7] end
		if trait == 16 then return femaleResults[12] end
	end
	
	--Genderless
	
	local genderlessResults = {
		 RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("phanpy", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("shinx", 0, "normal", Gender.Genderless),
		 RogueEssence.Dungeon.MonsterID("riolu", 0, "normal", Gender.Genderless)
	}
	
	if gender == 3 then
		if trait == 1 then return genderlessResults[12] end
		if trait == 2 then return genderlessResults[4] end
		if trait == 3 then return genderlessResults[5] end
		if trait == 4 then return genderlessResults[2] end
		if trait == 5 then return genderlessResults[10] end
		if trait == 6 then return genderlessResults[15] end
		if trait == 7 then return genderlessResults[14] end
		if trait == 8 then return genderlessResults[7] end
		if trait == 9 then return genderlessResults[1] end
		if trait == 10 then return genderlessResults[13] end
		if trait == 11 then return genderlessResults[9] end
		if trait == 12 then return genderlessResults[3] end
		if trait == 13 then return genderlessResults[11] end
		if trait == 14 then return genderlessResults[8] end
		if trait == 15 then return genderlessResults[16] end
		if trait == 16 then return genderlessResults[6] end
	end

end

local function roll(randMin, randMax)
	local cont = 0
	local rand = 0
	while cont < 10 do 
		cont = math.random(1, 10)
		rand = math.random(randMin, randMax)
	end
	
	return rand
end

---personality_test.Enter
--Engine callback function
function personality_test.Enter(map)
	
	
  --Setup
  UI:WaitShowBG("Black", 1, 1)
  GROUND:Hide("PLAYER")
  UI:ResetSpeaker()
  UI:SetCenter(true)
  GAME:FadeIn(20)
  UI:WaitShowVoiceOver(STRINGS:Format(MapStrings['Disclaimer']), -1)
  
  --Intro
  GAME:WaitFrames(120)
  for i = 1, 7, 1 do
	UI:WaitShowVoiceOver(STRINGS:Format(MapStrings['Intro_'..tostring(i)]), -1)
  end
  GAME:WaitFrames(20)
  SOUND:PlayBGM("003 - Welcome to the World of Pokémon!.ogg", true)
  UI:WaitHideBG(60)
  
  UI:SetCenter(false)

  --Have you played before?
  local skipQuiz = false

  UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Quiz_Played_Q1']), true)
  UI:WaitForChoice()
  local result = UI:ChoiceResult()
  
  --Do you just want to skip the quiz then?
  if result then
	UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Quiz_Played_Q2']), true)
    UI:WaitForChoice()
	skipQuiz = UI:ChoiceResult()
  end

  --Randomize and output questions
if not skipQuiz then
  
  local currentQ = {}
  local qTable = {}
  
  for i = 1, 64, 1 do
	table.insert(qTable, i)
  end
  
  for i = 1, #qTable, 1 do
	local rand = math.random(1, #qTable)
	table.insert(currentQ, qTable[rand])
	table.remove(qTable, rand)
  end
  
  for i = 1, 16, 1 do
	local choices = {}
	
	local rand = math.random(1, #currentQ)
	
	if not (STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A1']) == 'x') then
		table.insert(choices, STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A1']))
	end
	if not (STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A2']) == 'x') then
		table.insert(choices, STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A2']))
	end
	if not (STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A3']) == 'x') then
		table.insert(choices, STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A3']))
	end
	if not (STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A4']) == 'x') then
		table.insert(choices, STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A4']))
	end
	
	GAME:WaitFrames(1)
	UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Quiz_Q'..tostring(currentQ[rand])..'_A0']), choices, 1, 3)
	UI:WaitForChoice()
	result = UI:ChoiceResult()
	addNature(currentQ[rand], result)
	table.remove(currentQ, rand)
  end

end

  --Gender
choices = {STRINGS:Format(MapStrings['Quiz_Gender_A1']),
           STRINGS:Format(MapStrings['Quiz_Gender_A2']),
           STRINGS:Format(MapStrings['Quiz_Gender_A3'])}

UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Quiz_Gender_A0']), choices, 1, 3)
UI:WaitForChoice()
result = UI:ChoiceResult()
gender = result
  
  --Color Selection (Aura Replacement)
choices = {STRINGS:Format(MapStrings['Quiz_Color_A1']),
           STRINGS:Format(MapStrings['Quiz_Color_A2']),
           STRINGS:Format(MapStrings['Quiz_Color_A3']),
		   STRINGS:Format(MapStrings['Quiz_Color_A4']),
           STRINGS:Format(MapStrings['Quiz_Color_A5']),
		   STRINGS:Format(MapStrings['Quiz_Color_A6']),
           STRINGS:Format(MapStrings['Quiz_Color_A7']),
           STRINGS:Format(MapStrings['Quiz_Color_A8']),
		   STRINGS:Format(MapStrings['Quiz_Color_A9']),
           STRINGS:Format(MapStrings['Quiz_Color_A10']),
		   STRINGS:Format(MapStrings['Quiz_Color_A11'])}

UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Quiz_Color_A0']), choices, 1, 3)
UI:WaitForChoice()
result = UI:ChoiceResult()
favColor = result

  --Test Results 
natureVars = {natureBold, natureBrave, natureCalm, natureDocile, natureHardy, natureHasty, natureImpish, natureJolly, natureLonely, natureNaive, natureQuiet, natureQuirky, natureRash, natureRelaxed, natureSassy, natureTimid}
mainTrait = 0
mainTraitVal = 0

if not skipQuiz then 

for i = 1, #natureVars, 1 do
	print(natureVars[i])
	if natureVars[i] > mainTraitVal then
		mainTraitVal = natureVars[i]
		mainTrait = i
	elseif natureVars[i] == mainTraitVal then
		local rand = math.random(1, 100)
		if rand >= 50 then
			mainTraitVal = natureVars[i]
			mainTrait = i
		end
	end
end

UI:WaitShowDialogue(STRINGS:Format(MapStrings['Nature_Intro']))
for i = 1, 8, 1 do
	if not (STRINGS:Format(MapStrings['Nature_'..tostring(mainTrait)..'_'..tostring(i)]) == 'x') then
		UI:WaitShowDialogue(STRINGS:Format(MapStrings['Nature_'..tostring(mainTrait)..'_'..tostring(i)]))
	end
end

GAME:RemovePlayerTeam(0)
--GAME:RemovePlayerTeam(1)
--GAME:RemovePlayerTeam(2)
local pkm = pokemonSelection(mainTrait, natureVars, gender)
GAME:WaitFrames(1)
_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, pkm, 5, "", 0))

--add egg move (thanks again palika)
if GAME:GetCharacterSkill(GAME:GetPlayerPartyMember(0), 3) ~= "" then 
	GAME:SetCharacterSkill(GAME:GetPlayerPartyMember(0), egg_move_list[pkm.Species], 3)--override move in slot 4 if 4 moves are known. They can always go see slowpoke to get it back
else 
	GAME:LearnSkill(GAME:GetPlayerPartyMember(0), egg_move_list[pkm.Species])
end

SV.General.Starter = pkm
SV.PlayerInputs.FavoriteColor = favColor
SV.PlayerInputs.Personality = mainTrait

_DATA.Save:UpdateTeamProfile(true)
_DATA.Save.ActiveTeam.Players[0].IsFounder = true
_DATA.Save.ActiveTeam.Players[0].IsPartner = true

GAME:WaitFrames(20)
GROUND:SetPlayer(GAME:GetPlayerPartyMember(0))

for i = 1, 10, 1 do
	GROUND:Unhide("PLAYER")
	GAME:WaitFrames(5)
	GROUND:Hide("PLAYER")
	GAME:WaitFrames(5)
end

GROUND:Unhide("PLAYER")

GAME:WaitFrames(30)
UI:SetCenter(true)
UI:WaitShowDialogue(STRINGS:Format(MapStrings['Quiz_Result'], _DATA:GetMonster(pkm.Species):GetColoredName()))
UI:SetCenter(false)

UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Choice_Prompt'], _DATA:GetMonster(pkm.Species):GetColoredName()))
UI:WaitForChoice()

if not UI:ChoiceResult() then 

GROUND:Hide("PLAYER")

local continue = false
local txt = STRINGS:Format(MapStrings['Starter_Select'])
pkm = -1

while not continue do
	if gender == 1 then
		UI:ChooseMonsterMenu("", starterListMale)
	elseif gender == 2 then
		UI:ChooseMonsterMenu("", starterListFemale)
	else
		UI:ChooseMonsterMenu("", starterList)
	end	
	UI:WaitForChoice()	
	local result = UI:ChoiceResult()
	pkm = result
	GAME:RemovePlayerTeam(0)
	GAME:WaitFrames(1)
	_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, pkm, 5, "", 0))
	
	--add egg move (thanks again palika)
	if GAME:GetCharacterSkill(GAME:GetPlayerPartyMember(0), 3) ~= "" then 
		GAME:SetCharacterSkill(GAME:GetPlayerPartyMember(0), egg_move_list[pkm.Species], 3)--override move in slot 4 if 4 moves are known. They can always go see slowpoke to get it back
	else 
		GAME:LearnSkill(GAME:GetPlayerPartyMember(0), egg_move_list[pkm.Species])
	end
	
	GROUND:SetPlayer(GAME:GetPlayerPartyMember(0))
	UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Choice_Prompt'], _DATA:GetMonster(pkm.Species):GetColoredName()))
	UI:WaitForChoice()
	continue = UI:ChoiceResult()
	if not continue then
		GROUND:Hide("PLAYER")
	end
end

--GAME:SetCharacterNickname(GAME:GetPlayerPartyMember(0), name)
SV.General.Starter = pkm

_DATA.Save:UpdateTeamProfile(true)
_DATA.Save.ActiveTeam.Players[0].IsFounder = true
_DATA.Save.ActiveTeam.Players[0].IsPartner = true

end

else

SV.PlayerInputs.FavoriteColor = favColor
SV.PlayerInputs.Personality = mainTrait

local continue = false
local txt = STRINGS:Format(MapStrings['Starter_Select'])
pkm = -1

local heroListNum = 0

while not continue do
	if gender == 1 then
		UI:ChooseMonsterMenu("", starterListMale)
	elseif gender == 2 then
		UI:ChooseMonsterMenu("", starterListFemale)
	else
		UI:ChooseMonsterMenu("", starterList)
	end	
	UI:WaitForChoice()	
	local result = UI:ChoiceResult()
	pkm = result
	
	for i = 1, #starterList do
		if starterList[i] == pkm then
			heroListNum = i
			break
		end
	end
	
	GAME:RemovePlayerTeam(0)
	GAME:WaitFrames(1)
	_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, pkm, 5, "", 0))
	
	--add egg move (thanks again palika)
	if GAME:GetCharacterSkill(GAME:GetPlayerPartyMember(0), 3) ~= "" then 
		GAME:SetCharacterSkill(GAME:GetPlayerPartyMember(0), egg_move_list[pkm.Species], 3)--override move in slot 4 if 4 moves are known. They can always go see slowpoke to get it back
	else 
		GAME:LearnSkill(GAME:GetPlayerPartyMember(0), egg_move_list[pkm.Species])
	end
	
	GROUND:SetPlayer(GAME:GetPlayerPartyMember(0))
	UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Choice_Prompt'], _DATA:GetMonster(pkm.Species):GetColoredName()))
	UI:WaitForChoice()
	continue = UI:ChoiceResult()
	if not continue then
		GROUND:Hide("PLAYER")
	end
end

--GAME:SetCharacterNickname(GAME:GetPlayerPartyMember(0), name)
SV.General.Starter = pkm

_DATA.Save:UpdateTeamProfile(true)
_DATA.Save.ActiveTeam.Players[0].IsFounder = true
_DATA.Save.ActiveTeam.Players[0].IsPartner = true

end

  --Partner Selection
GROUND:Hide("PLAYER")
_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, RogueEssence.Dungeon.MonsterID("missingno", 0, "normal", Gender.Genderless), 5, "", 0))
UI:WaitShowDialogue(STRINGS:Format(MapStrings['Partner_Intro']))

local continue = false
local txt = STRINGS:Format(MapStrings['Partner_Select'])
pkm = -1

local partnerListNum = 0

while not continue do
	UI:ChooseMonsterMenu("", starterList)
	UI:WaitForChoice()	
	local result = UI:ChoiceResult()
	print(result)
	pkm = result
	
	for i = 1, #starterList do
		if starterList[i] == pkm then
			partnerListNum = i
			break
		end
	end
	
	GAME:RemovePlayerTeam(1)
	GAME:WaitFrames(1)
	_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, pkm, 5, "", 0))
	GROUND:SetPlayer(GAME:GetPlayerPartyMember(1))
	UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Choice_Prompt'], _DATA:GetMonster(pkm.Species):GetColoredName()))
	UI:WaitForChoice()
	continue = UI:ChoiceResult()
	if _DATA.Save.ActiveTeam.Players[0].Element1 == _DATA.Save.ActiveTeam.Players[1].Element1 then
		UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Partner_Warning'], _DATA:GetMonster(pkm.Species):GetColoredName()))
		UI:WaitForChoice()
		continue = UI:ChoiceResult()
	end
	if not continue then
		GROUND:Hide("PLAYER")
	end

end

--Partner Gender
choices = {STRINGS:Format(MapStrings['Quiz_Gender_A1']),
           STRINGS:Format(MapStrings['Quiz_Gender_A2']),
           STRINGS:Format(MapStrings['Quiz_Gender_A3'])}

UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Partner_Gender']), choices, 1, 3)
UI:WaitForChoice()
result = UI:ChoiceResult()
GAME:RemovePlayerTeam(1)

GAME:WaitFrames(1)

if result == 1 then pkm.Gender = Gender.Male end
if result == 2 then pkm.Gender = Gender.Female end
if result == 3 then pkm.Gender = Gender.Genderless end

	GAME:RemovePlayerTeam(1)
	GAME:WaitFrames(1)
	_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, pkm, 5, "", 0))
	GROUND:SetPlayer(GAME:GetPlayerPartyMember(1))

	--add egg move (thanks again palika)
	if GAME:GetCharacterSkill(GAME:GetPlayerPartyMember(1), 3) ~= "" then 
		GAME:SetCharacterSkill(GAME:GetPlayerPartyMember(1), egg_move_list[pkm.Species], 3)--override move in slot 4 if 4 moves are known. They can always go see slowpoke to get it back
	else 
		GAME:LearnSkill(GAME:GetPlayerPartyMember(1), egg_move_list[pkm.Species])
	end

SV.General.Partner = pkm

_DATA.Save.ActiveTeam.Players[1].IsFounder = true
_DATA.Save.ActiveTeam.Players[1].IsPartner = true

  --Partner Name
local ch = false
local name = ""
while not ch do
    name = ""
	while name == "" do
      UI:NameMenu(STRINGS:Format(MapStrings['Name_Title']), "")
      UI:WaitForChoice()
      name = UI:ChoiceResult()
	end
	
	GAME:SetCharacterNickname(GAME:GetPlayerPartyMember(1), name)
    UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['Name_Confirm'], CH('PLAYER'):GetDisplayName()), true)
    UI:WaitForChoice()
    ch = UI:ChoiceResult()
  end

GROUND:Hide("PLAYER")

--Partner Text
-- 0 = Neutral
-- 1 = "Cool"
-- 2 = "Cute"
if _DATA.Save.ActiveTeam.Players[1].Gender == Gender.Male then
	local randResult = roll(1, 100)
	
	if randResult <= 10 then -- 10%
		SV.Personality.PartnerTalkKind = 2
	elseif randResult > 10 and randResult <= 50 then -- 40%
		SV.Personality.PartnerTalkKind = 1
	elseif randResult > 50 then -- 50%
		SV.Personality.PartnerTalkKind = 0
	end
elseif _DATA.Save.ActiveTeam.Players[1].Gender == Gender.Female then
	local randResult = roll(1, 100)
	
	if randResult <= 10 then -- 10%
		SV.Personality.PartnerTalkKind = 1
	elseif randResult > 10 and randResult <= 50 then -- 40%
		SV.Personality.PartnerTalkKind = 2
	elseif randResult > 50 then -- 50%
		SV.Personality.PartnerTalkKind = 0
	end
else
	local randResult = roll(1, 100)
	
	if randResult <= 25 then -- 25%
		SV.Personality.PartnerTalkKind = 1
	elseif randResult > 25 and randResult <= 50 then -- 25%
		SV.Personality.PartnerTalkKind = 2
	elseif randResult > 50 then -- 50%
		SV.Personality.PartnerTalkKind = 0
	end
end

--Hero Text
if _DATA.Save.ActiveTeam.Players[0].Gender == Gender.Female then
	SV.Personality.HeroTalkKind = 1
else
	SV.Personality.HeroTalkKind = 0
end

UI:WaitShowDialogue(STRINGS:Format(MapStrings['Conclusion_1']))
UI:WaitShowDialogue(STRINGS:Format(MapStrings['Conclusion_2']))
UI:WaitShowDialogue(STRINGS:Format(MapStrings['Conclusion_3']))

SOUND:FadeOutBGM(120)
GAME:FadeOut(false, 120)

GROUND:SetPlayer(GAME:GetPlayerPartyMember(0))

_DATA.Save:UpdateTeamProfile(true)
_DATA.Save.NoSwitching = true

--Dev Build
GAME:EnterGroundMap("chapter_card", "Entrance")

--Main Build
--GAME:RestartToTitle()

end

---personality_test.Exit
--Engine callback function
function personality_test.Exit(map)


end

---personality_test.Update
--Engine callback function
function personality_test.Update(map)


end

---personality_test.GameSave
--Engine callback function
function personality_test.GameSave(map)


end

---personality_test.GameLoad
--Engine callback function
function personality_test.GameLoad(map)


end

-------------------------------
-- Entities Callbacks
-------------------------------


return personality_test

